String.prototype.isIntValued=function(){return!isNaN(parseInt(this))},String.prototype.gappedRepeat=function(a=2,b={}){let c="";for(let d=1;d<=a;d++)c+=this,null!=b[d]&&(c+=b[d]),null!=b.evenGap&&0==d%2&&(c+=b.evenGap),null!=b.oddGap&&0!=d%2&&(c+=b.oddGap);return c},String.prototype.wrapInTag=function(a="p"){let b=["img","hr","br","area","base","input","link","meta","param","source","track","wbr","command","keygen","menuitem"];if("string"==typeof a){if(!b.includes(a))return`<${a}>${this}</${a}>`;throw new Error("Self-Closing Tag Provided! Expecting Non Self-Closing HTML5 Tag!")}else if("object"==typeof a){let c=[];return a.forEach(a=>{if(!b.includes(a))c.push(`<${a}>${this}</${a}>`);else throw new Error(`Self-Closing ${a} Tag Provided! Expecting Non Self-Closing HTML5 Tag!`)}),c}},String.prototype.createLink=function(a){return`<a href='${a}'>${this}</a>`},String.prototype.exec=function(){const a=document.createElement("script");a.text=this,document.body.appendChild(a)},String.prototype.isLowerCase=function(){return!/[a-z]/.test(this)&&/[A-Z]/.test(this)},String.prototype.isCapitalized=function(){return null!==this.match(new RegExp(/^[A-Z]/))},String.prototype.isActualWordProcess=async function(){let a=this.toLowerCase(),b=!1,c=new Headers;try{const c=await fetch("https://api.wordnik.com/v4/word.json/"+a+"/definitions?limit=200&includeRelated=false&useCanonical=false&includeTags=false&api_key=a2a73e7b926c924fad7001ca3111acd55af2ffabf50eb4ae5").then(a=>a.json());c[0]!=null&&(b=!0)}catch(a){throw console.log("there was an error",a),new Error(a.message)}return b},String.prototype.isActualWord=async function(){let a=await this.isActualWordProcess();return a},String.prototype.toKebabCase=function(a=" "){return this.replaceAll(a,"-")},String.prototype.toUnderCase=function(a=" "){return this.replaceAll(a,"_")},String.prototype.increment=function(a=1){if(this.isIntValued()){let b=parseInt(this);return b+=a,b.toString()}throw new Error("Given String Is Not Int-Valued")},String.prototype.decrement=function(a=1){if(this.isIntValued()){let b=parseInt(this);return b-=a,b.toString().toLowerCase()}throw new Error("Given String Is Not Int-Valued")},String.prototype.declare=function(a){let b=this;return window[b]=a,!0},String.prototype.capitalize=function(){return this.replace(/\w\S*/g,function(a){return a.charAt(0).toUpperCase()+a.substr(1).toLowerCase()})},String.prototype.capitalizeFirst=function(){return this[0].toUpperCase()+this.slice(1)},String.prototype.escape=function(){return this.replace(/[\0\x08\x09\x1a\n\r"'\\\%]/g,function(a){return"\0"===a?"\\0":"\b"===a?"\\b":"\t"===a?"\\t":"\x1A"===a?"\\z":"\n"===a?"\\n":"\r"===a?"\\r":"\""===a||"'"===a||"\\"===a||"%"===a?"\\"+a:a})},String.prototype.removeSpecialChars=function(){return this.replace(/[^a-zA-Z ]/g,"")};
